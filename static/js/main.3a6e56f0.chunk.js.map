{"version":3,"sources":["middlewares/async.js","middlewares/stateSchema.js","middlewares/stateValidator.js","actions/types.js","reducers/index.js","reducers/comments.js","reducers/auth.js","actions/index.js","components/CommentBox.js","components/requireAuth.js","components/CommentList.js","components/App.js","index.js","Root.js"],"names":["middlewares_async","_ref","dispatch","next","action","payload","then","response","newAction","Object","objectSpread","stateSchema","definitions","$schema","$id","type","title","required","properties","comments","items","default","examples","pattern","auth","stateValidator","dispach","getState","tv4","validate","console","warn","SAVE_COMMENT","FETCH_COMMENTS","CHANGE_AUTH","combineReducers","state","arguments","length","undefined","toConsumableArray","concat","data","map","comment","name","saveComment","fetchComments","axios","get","changeAuth","isLoggedIn","FetchButton","withStyles","root","marginTop","Button","CommentBox","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","react_default","a","createElement","Grid_default","item","xs","sm","md","onSubmit","this","FormControl_default","fullWidth","TextField_default","multiline","rows","label","onChange","margin","Button_default","variant","color","className","onClick","Component","connect","actions","ChildComponent","ComposedComponent","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","shouldNavigateAWay","history","push","requireAuth","CommentList","ListItem_default","Typography_default","align","List_default","renderComments","StyledGrid","container","height","Grid","App","linkHome","Link","assign","to","linkNewPost","_this2","AppBar_default","Toolbar_default","component","renderButton","react","renderNavBar","direction","justify","alignItems","spacing","Route","path","exact","ReactDOM","render","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","async","es","BrowserRouter","document","querySelector"],"mappings":"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","file":"static/js/main.3a6e56f0.chunk.js","sourcesContent":["export default ({dispatch})=> next => action =>{\r\n    //Check to see if the action\r\n    //has a promise on it's payload property\r\n    //if it does, wait for it to resolve\r\n    //if it doesn't, then send the action on to the next middleware\r\n    \r\n    if(!action.payload || !action.payload.then){\r\n        return next(action);\r\n    }\r\n    \r\n    //We want to wait for the promise to resolve\r\n    //(gets its data!!) and then create a new action\r\n    //with  that data and dispatch it;\r\n    action.payload.then(function(response){\r\n        const newAction = {...action, payload: response}\r\n        dispatch(newAction);\r\n    })\r\n};","export default {\r\n    \"definitions\": {},\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"$id\": \"http://example.com/root.json\",\r\n    \"type\": \"object\",\r\n    \"title\": \"The Root Schema\",\r\n    \"required\": [\r\n      \"comments\",\r\n      \"auth\"\r\n    ],\r\n    \"properties\": {\r\n      \"comments\": {\r\n        \"$id\": \"#/properties/comments\",\r\n        \"type\": \"array\",\r\n        \"title\": \"The Comments Schema\",\r\n        \"items\": {\r\n          \"$id\": \"#/properties/comments/items\",\r\n          \"type\": \"string\",\r\n          \"title\": \"The Items Schema\",\r\n          \"default\": \"\",\r\n          \"examples\": [\r\n            \"Comment# 1\",\r\n            \"Comment #2\"\r\n          ],\r\n          \"pattern\": \"^(.*)$\"\r\n        }\r\n      },\r\n      \"auth\": {\r\n        \"$id\": \"#/properties/auth\",\r\n        \"type\": \"boolean\",\r\n        \"title\": \"The Auth Schema\",\r\n        \"default\": false,\r\n        \"examples\": [\r\n          true\r\n        ]\r\n      }\r\n    }\r\n  }","import tv4 from 'tv4';\r\nimport stateSchema from './stateSchema'\r\n\r\nexport default ({dispach, getState})=>(next)=>(action)=>{\r\n    next(action);\r\n\r\n    if(!tv4.validate(getState(), stateSchema)){\r\n        console.warn('invalid state schema detected')\r\n    }\r\n};\r\n\r\n","export const SAVE_COMMENT = \"save_comment\";\r\nexport const FETCH_COMMENTS = \"fetch_comments\";\r\nexport const CHANGE_AUTH = \"change_auth\";","import { combineReducers } from 'redux';\r\nimport commentsReducer  from 'reducers/comments';\r\nimport authReducer from 'reducers/auth';\r\n\r\n\r\nexport default combineReducers({\r\n    comments: commentsReducer,\r\n    auth: authReducer\r\n});","import {SAVE_COMMENT, FETCH_COMMENTS} from 'actions/types';\r\n\r\nexport default function(state = [], action){\r\n    switch(action.type){\r\n        case SAVE_COMMENT:\r\n            return [...state, action.payload];\r\n    case FETCH_COMMENTS:\r\n            const comments = action.payload.data.map(comment => comment.name);\r\n            return [...state, ...comments];\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CHANGE_AUTH} from 'actions/types';\r\n\r\nexport default function(state=false, action){\r\n    switch (action.type){\r\n        case CHANGE_AUTH:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport {SAVE_COMMENT, FETCH_COMMENTS, CHANGE_AUTH} from 'actions/types';\r\n\r\nexport function saveComment(comment){\r\n    return {\r\n        type: SAVE_COMMENT,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport function fetchComments(){\r\n    const response = axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\r\n\r\n    return {\r\n        type: FETCH_COMMENTS,\r\n        payload: response\r\n    }\r\n}\r\n\r\nexport function changeAuth(isLoggedIn){\r\n    return{\r\n        type: CHANGE_AUTH,\r\n        payload: isLoggedIn\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'actions';\r\nimport requireAuth from 'components/requireAuth';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst FetchButton = withStyles({\r\n    root: {\r\n        marginTop: '10px'\r\n    }       \r\n})(Button);\r\n\r\n\r\nclass CommentBox extends Component {\r\n    state = {comment: \"\"};\r\n\r\n    handleChange = event =>{\r\n        this.setState({comment: event.target.value});\r\n    };\r\n\r\n    handleSubmit = event =>{\r\n        event.preventDefault();\r\n\r\n        this.props.saveComment(this.state.comment);\r\n\r\n        this.setState({comment: \"\"});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Grid item xs={12} sm={12} md={4}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormControl fullWidth>\r\n                        <TextField  \r\n                            multiline\r\n                            rows=\"4\"\r\n                            label=\"Add a comment\"\r\n                            onChange={this.handleChange} \r\n                            value={this.state.comment}\r\n                            fullWidth \r\n                            margin=\"normal\"/>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit Comment</Button>\r\n                    </FormControl>\r\n                </form>\r\n                <FormControl>\r\n                    <FetchButton  \r\n                    variant=\"contained\" \r\n                    className=\"fetch-comments\" \r\n                    onClick={this.props.fetchComments}>Fetch Comments</FetchButton>\r\n                </FormControl>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions) (requireAuth(CommentBox));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nexport default (ChildComponent)=>{\r\n    class ComposedComponent extends Component {\r\n\r\n        //Component just got rendered\r\n        componentDidMount(){\r\n            this.shouldNavigateAWay();\r\n        }\r\n\r\n        //compoenet just re-rendered\r\n        componentDidUpdate(){\r\n            this.shouldNavigateAWay();\r\n        }\r\n\r\n        shouldNavigateAWay(){\r\n            if(!this.props.auth){\r\n                this.props.history.push('/');\r\n            }\r\n        }\r\n        render(){\r\n            return <ChildComponent {...this.props} />\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state){\r\n        return {auth: state.auth};\r\n    }\r\n\r\n    return connect(mapStateToProps)(ComposedComponent);\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass CommentList extends Component {\r\n\r\n    renderComments(){\r\n        return this.props.comments.map(comment=>{\r\n            return (\r\n            <ListItem key={comment}>{comment}\r\n            </ListItem>\r\n            );\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid item xs={12} sm={12} md={4} >\r\n                <Typography variant=\"h4\" align=\"center\">Comment List</Typography>\r\n                <List>\r\n                    {this.renderComments()}\r\n                </List>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {comments: state.comments};\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentList);","import React, {Component, Fragment} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'actions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CommentBox from 'components/CommentBox';\r\nimport CommentList from 'components/CommentList';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledGrid = withStyles({\r\n    container: {\r\n        height: '100vh'\r\n    }       \r\n})(Grid);\r\n\r\nclass App extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchComments();\r\n    }\r\n\r\n    renderButton(){\r\n        if(this.props.auth){\r\n            return <Button onClick={()=>this.props.changeAuth(false)}>Sign Out</Button>\r\n        } else {\r\n            return <Button onClick={()=>this.props.changeAuth(true)}>Sign In</Button>\r\n        }\r\n    }   \r\n    \r\n    linkHome = props => <Link to=\"/\" {...props} />\r\n    linkNewPost = props => <Link to=\"/post\" {...props} />\r\n\r\n    renderNavBar(){\r\n        return(\r\n            <AppBar>\r\n                <Toolbar>\r\n                    <Button component={this.linkHome}>Home</Button>\r\n                    <Button component={this.linkNewPost}>Post A Comment</Button>\r\n                    {this.renderButton()}\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {this.renderNavBar()}}\r\n                <StyledGrid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={16}>\r\n                    <Route path=\"/post\"component={CommentBox}/>\r\n                    <Route exact path=\"/\" component={CommentList}/>\r\n                </StyledGrid>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Route} from  'react-router-dom';\r\n\r\n\r\nimport Root from 'Root';\r\n\r\nimport App from \"components/App\";\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={App}/>\r\n        </BrowserRouter>\r\n    </Root>, \r\n    document.querySelector('#root')\r\n);","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport async from 'middlewares/async';\r\nimport stateValidator from 'middlewares/stateValidator';\r\nimport reducers from 'reducers';\r\n\r\nexport default ({children, initialState = {}})=>{\r\n    const store = createStore(\r\n        reducers, \r\n        initialState, \r\n        applyMiddleware(async, stateValidator)\r\n    );\r\n\r\n    return (\r\n        <Provider store={store}>{children}</Provider>\r\n    );\r\n}"],"sourceRoot":""}
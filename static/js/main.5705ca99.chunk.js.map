{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/comments.js","actions/index.js","components/CommentBox.js","components/CommentList.js","index.js","Root.js","components/App.js"],"names":["SAVE_COMMENT","FETCH_COMMENTS","combineReducers","comments","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","data","map","comment","name","saveComment","fetchComments","response","axios","get","CommentBox","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","react_default","a","createElement","onSubmit","this","onChange","className","onClick","Component","connect","actions","CommentList","key","renderComments","ReactDOM","render","_ref","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","es","components_CommentBox","components_CommentList","document","querySelector"],"mappings":"sTAAaA,EAAe,eACfC,EAAiB,iBCGfC,cAAgB,CAC3BC,SCHJ,WAA2C,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,GAAIG,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAOC,EAAOC,MACV,KAAKT,EACD,OAAOU,OAAAC,EAAA,EAAAD,CAAIN,GAAXQ,OAAA,CAAkBJ,EAAOK,UACjC,KAAKZ,EACG,IAAME,EAAWK,EAAOK,QAAQC,KAAKC,IAAI,SAAAC,GAAO,OAAIA,EAAQC,OAC5D,OAAOP,OAAAC,EAAA,EAAAD,CAAIN,GAAXQ,OAAAF,OAAAC,EAAA,EAAAD,CAAqBP,IACzB,QACI,OAAOC,0DCNZ,SAASc,EAAYF,GACxB,MAAO,CACHP,KAAMT,EACNa,QAASG,GAIV,SAASG,IACZ,IAAMC,EAAWC,IAAMC,IAAI,0DAE3B,MAAO,CACHb,KAAMR,EACNY,QAASO,OCZXG,6MACFnB,MAAQ,CAACY,QAAS,MAElBQ,aAAe,SAAAC,GACXC,EAAKC,SAAS,CAACX,QAASS,EAAMG,OAAOC,WAGzCC,aAAe,SAAAL,GACXA,EAAMM,iBAENL,EAAKM,MAAMd,YAAYQ,EAAKtB,MAAMY,SAElCU,EAAKC,SAAS,CAACX,QAAS,8EAIxB,OACIiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKP,cACjBG,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YAAUG,SAAUD,KAAKb,aAAcK,MAAOQ,KAAKjC,MAAMY,UACzDiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCAGRF,EAAAC,EAAAC,cAAA,UAASI,UAAU,iBAAiBC,QAASH,KAAKL,MAAMb,eAAxD,0BAzBSsB,aA+BVC,cAAQ,KAAMC,EAAdD,CAAwBnB,GChCjCqB,2LAGE,OAAOP,KAAKL,MAAM7B,SAASY,IAAI,SAAAC,GAC3B,OAAOiB,EAAAC,EAAAC,cAAA,MAAIU,IAAK7B,GAAUA,sCAI9B,OACIiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACKE,KAAKS,0BAXAL,aAsBXC,kBAJf,SAAyBtC,GACrB,MAAO,CAACD,SAAUC,EAAMD,WAGbuC,CAAyBE,GClBxCG,IAASC,OACLf,EAAAC,EAAAC,cCFW,SAAAc,GAAiC,IAA/BC,EAA+BD,EAA/BC,SAA+BC,EAAAF,EAArBG,oBAAqB,IAAAD,EAAN,GAAMA,EACtCE,EAAQC,YACVC,EACAH,EACAI,YAAgBC,MAGpB,OACIxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUL,MAAOA,GAAQH,IDN7B,KACIjB,EAAAC,EAAAC,cELO,WACX,OACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAACyB,EAAD,QFCJ,OAEJC,SAASC,cAAc","file":"static/js/main.5705ca99.chunk.js","sourcesContent":["export const SAVE_COMMENT = \"save_comment\";\r\nexport const FETCH_COMMENTS = \"fetch_comments\";","import { combineReducers } from 'redux';\r\nimport commentsReducer  from 'reducers/comments';\r\n\r\n\r\nexport default combineReducers({\r\n    comments: commentsReducer\r\n});","import {SAVE_COMMENT, FETCH_COMMENTS} from 'actions/types';\r\n\r\nexport default function(state = [], action){\r\n    switch(action.type){\r\n        case SAVE_COMMENT:\r\n            return [...state, action.payload];\r\n    case FETCH_COMMENTS:\r\n            const comments = action.payload.data.map(comment => comment.name);\r\n            return [...state, ...comments];\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport {SAVE_COMMENT, FETCH_COMMENTS} from 'actions/types';\r\n\r\nexport function saveComment(comment){\r\n    return {\r\n        type: SAVE_COMMENT,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport function fetchComments(){\r\n    const response = axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\r\n\r\n    return {\r\n        type: FETCH_COMMENTS,\r\n        payload: response\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'actions';\r\n\r\nclass CommentBox extends Component {\r\n    state = {comment: \"\"};\r\n\r\n    handleChange = event =>{\r\n        this.setState({comment: event.target.value});\r\n    };\r\n\r\n    handleSubmit = event =>{\r\n        event.preventDefault();\r\n\r\n        this.props.saveComment(this.state.comment);\r\n\r\n        this.setState({comment: \"\"});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h4>Add a Comment</h4>\r\n                    <textarea onChange={this.handleChange} value={this.state.comment} />\r\n                    <div>\r\n                        <button>Submit Comment</button>\r\n                    </div>\r\n                </form>\r\n                <button  className=\"fetch-comments\" onClick={this.props.fetchComments}>Fetch Comments</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions) (CommentBox);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass CommentList extends Component {\r\n\r\n    renderComments(){\r\n        return this.props.comments.map(comment=>{\r\n            return <li key={comment}>{comment}</li>\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {this.renderComments()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {comments: state.comments};\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentList);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Root from 'Root';\r\n\r\nimport App from \"components/App\";\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <App/>\r\n    </Root>, \r\n    document.querySelector('#root')\r\n);","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reduxPromise from 'redux-promise';\r\nimport reducers from 'reducers';\r\n\r\nexport default ({children, initialState = {}})=>{\r\n    const store = createStore(\r\n        reducers, \r\n        initialState, \r\n        applyMiddleware(reduxPromise)\r\n    );\r\n\r\n    return (\r\n        <Provider store={store}>{children}</Provider>\r\n    );\r\n}","import React from 'react';\r\nimport CommentBox from 'components/CommentBox';\r\nimport CommentList from 'components/CommentList';\r\n\r\nexport default ()=>{\r\n    return(\r\n        <div>\r\n            <CommentBox />\r\n            <CommentList />\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}
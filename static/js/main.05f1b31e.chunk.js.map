{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/comments.js","actions/index.js","components/CommentBox.js","components/CommentList.js","index.js","Root.js","components/App.js"],"names":["SAVE_COMMENT","FETCH_COMMENTS","combineReducers","comments","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","data","map","comment","name","saveComment","fetchComments","response","axios","get","FetchButton","withStyles","root","marginTop","Button","CommentBox","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","react_default","a","createElement","Grid_default","item","xs","sm","md","onSubmit","this","FormControl_default","fullWidth","TextField_default","multiline","rows","label","onChange","margin","Button_default","variant","color","className","onClick","Component","connect","actions","CommentList","ListItem_default","key","List_default","renderComments","ReactDOM","render","_ref","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","es","container","direction","justify","alignItems","spacing","components_CommentBox","components_CommentList","document","querySelector"],"mappings":"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","file":"static/js/main.05f1b31e.chunk.js","sourcesContent":["export const SAVE_COMMENT = \"save_comment\";\r\nexport const FETCH_COMMENTS = \"fetch_comments\";","import { combineReducers } from 'redux';\r\nimport commentsReducer  from 'reducers/comments';\r\n\r\n\r\nexport default combineReducers({\r\n    comments: commentsReducer\r\n});","import {SAVE_COMMENT, FETCH_COMMENTS} from 'actions/types';\r\n\r\nexport default function(state = [], action){\r\n    switch(action.type){\r\n        case SAVE_COMMENT:\r\n            return [...state, action.payload];\r\n    case FETCH_COMMENTS:\r\n            const comments = action.payload.data.map(comment => comment.name);\r\n            return [...state, ...comments];\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport {SAVE_COMMENT, FETCH_COMMENTS} from 'actions/types';\r\n\r\nexport function saveComment(comment){\r\n    return {\r\n        type: SAVE_COMMENT,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport function fetchComments(){\r\n    const response = axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\r\n\r\n    return {\r\n        type: FETCH_COMMENTS,\r\n        payload: response\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'actions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst FetchButton = withStyles({\r\n    root: {\r\n        marginTop: '10px'\r\n    }       \r\n})(Button);\r\n\r\n\r\nclass CommentBox extends Component {\r\n    state = {comment: \"\"};\r\n\r\n    handleChange = event =>{\r\n        this.setState({comment: event.target.value});\r\n    };\r\n\r\n    handleSubmit = event =>{\r\n        event.preventDefault();\r\n\r\n        this.props.saveComment(this.state.comment);\r\n\r\n        this.setState({comment: \"\"});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Grid item xs={12} sm={12} md={4}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormControl fullWidth>\r\n                        <TextField  \r\n                            multiline\r\n                            rows=\"4\"\r\n                            label=\"Add a comment\"\r\n                            onChange={this.handleChange} \r\n                            value={this.state.comment}\r\n                            fullWidth \r\n                            margin=\"normal\"/>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit Comment</Button>\r\n                    </FormControl>\r\n                </form>\r\n                <FormControl>\r\n                    <FetchButton  \r\n                    variant=\"contained\" \r\n                    className=\"fetch-comments\" \r\n                    onClick={this.props.fetchComments}>Fetch Comments</FetchButton>\r\n                </FormControl>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null, actions) (CommentBox);\r\n//export default withStyles(styles)(connect(null, actions)(CommentBox))","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nclass CommentList extends Component {\r\n\r\n    renderComments(){\r\n        return this.props.comments.map(comment=>{\r\n            return (\r\n            <ListItem key={comment}>{comment}\r\n            </ListItem>\r\n            );\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid item xs={12} sm={12} md={4} >\r\n                <List>\r\n                    {this.renderComments()}\r\n                </List>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {comments: state.comments};\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentList);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Root from 'Root';\r\n\r\nimport App from \"components/App\";\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <App/>\r\n    </Root>, \r\n    document.querySelector('#root')\r\n);","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reduxPromise from 'redux-promise';\r\nimport reducers from 'reducers';\r\n\r\nexport default ({children, initialState = {}})=>{\r\n    const store = createStore(\r\n        reducers, \r\n        initialState, \r\n        applyMiddleware(reduxPromise)\r\n    );\r\n\r\n    return (\r\n        <Provider store={store}>{children}</Provider>\r\n    );\r\n}","import React from 'react';\r\nimport CommentBox from 'components/CommentBox';\r\nimport CommentList from 'components/CommentList';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default ()=>{\r\n    return(\r\n        <Grid container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={16}>\r\n            <CommentBox/>\r\n            <CommentList />\r\n        </Grid>\r\n    );\r\n}"],"sourceRoot":""}
{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/comments.js","reducers/auth.js","actions/index.js","components/CommentBox.js","components/CommentList.js","components/App.js","index.js","Root.js"],"names":["SAVE_COMMENT","FETCH_COMMENTS","CHANGE_AUTH","combineReducers","comments","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","data","map","comment","name","auth","saveComment","fetchComments","response","axios","get","changeAuth","isLoggedIn","FetchButton","withStyles","root","marginTop","Button","CommentBox","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","react_default","a","createElement","Grid_default","item","xs","sm","md","onSubmit","this","FormControl_default","fullWidth","TextField_default","multiline","rows","label","onChange","margin","Button_default","variant","color","className","onClick","Component","connect","actions","CommentList","ListItem_default","key","Typography_default","align","List_default","renderComments","StyledGrid","container","height","Grid","App","linkHome","Link","assign","to","linkNewPost","_this2","AppBar_default","Toolbar_default","component","renderButton","react","renderNavBar","direction","justify","alignItems","spacing","Route","path","exact","ReactDOM","render","_ref","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","es","BrowserRouter","document","querySelector"],"mappings":"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","file":"static/js/main.639908fa.chunk.js","sourcesContent":["export const SAVE_COMMENT = \"save_comment\";\r\nexport const FETCH_COMMENTS = \"fetch_comments\";\r\nexport const CHANGE_AUTH = \"change_auth\";","import { combineReducers } from 'redux';\r\nimport commentsReducer  from 'reducers/comments';\r\nimport authReducer from 'reducers/auth';\r\n\r\n\r\nexport default combineReducers({\r\n    comments: commentsReducer,\r\n    auth: authReducer\r\n});","import {SAVE_COMMENT, FETCH_COMMENTS} from 'actions/types';\r\n\r\nexport default function(state = [], action){\r\n    switch(action.type){\r\n        case SAVE_COMMENT:\r\n            return [...state, action.payload];\r\n    case FETCH_COMMENTS:\r\n            const comments = action.payload.data.map(comment => comment.name);\r\n            return [...state, ...comments];\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CHANGE_AUTH} from 'actions/types';\r\n\r\nexport default function(state=false, action){\r\n    switch (action.type){\r\n        case CHANGE_AUTH:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport {SAVE_COMMENT, FETCH_COMMENTS, CHANGE_AUTH} from 'actions/types';\r\n\r\nexport function saveComment(comment){\r\n    return {\r\n        type: SAVE_COMMENT,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport function fetchComments(){\r\n    const response = axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\r\n\r\n    return {\r\n        type: FETCH_COMMENTS,\r\n        payload: response\r\n    }\r\n}\r\n\r\nexport function changeAuth(isLoggedIn){\r\n    return{\r\n        type: CHANGE_AUTH,\r\n        payload: isLoggedIn\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'actions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst FetchButton = withStyles({\r\n    root: {\r\n        marginTop: '10px'\r\n    }       \r\n})(Button);\r\n\r\n\r\nclass CommentBox extends Component {\r\n    state = {comment: \"\"};\r\n\r\n    handleChange = event =>{\r\n        this.setState({comment: event.target.value});\r\n    };\r\n\r\n    handleSubmit = event =>{\r\n        event.preventDefault();\r\n\r\n        this.props.saveComment(this.state.comment);\r\n\r\n        this.setState({comment: \"\"});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Grid item xs={12} sm={12} md={4}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormControl fullWidth>\r\n                        <TextField  \r\n                            multiline\r\n                            rows=\"4\"\r\n                            label=\"Add a comment\"\r\n                            onChange={this.handleChange} \r\n                            value={this.state.comment}\r\n                            fullWidth \r\n                            margin=\"normal\"/>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit Comment</Button>\r\n                    </FormControl>\r\n                </form>\r\n                <FormControl>\r\n                    <FetchButton  \r\n                    variant=\"contained\" \r\n                    className=\"fetch-comments\" \r\n                    onClick={this.props.fetchComments}>Fetch Comments</FetchButton>\r\n                </FormControl>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null, actions) (CommentBox);\r\n//export default withStyles(styles)(connect(null, actions)(CommentBox))","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass CommentList extends Component {\r\n\r\n    renderComments(){\r\n        return this.props.comments.map(comment=>{\r\n            return (\r\n            <ListItem key={comment}>{comment}\r\n            </ListItem>\r\n            );\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <Grid item xs={12} sm={12} md={4} >\r\n                <Typography variant=\"h4\" align=\"center\">Comment List</Typography>\r\n                <List>\r\n                    {this.renderComments()}\r\n                </List>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {comments: state.comments};\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentList);","import React, {Component, Fragment} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from 'actions';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CommentBox from 'components/CommentBox';\r\nimport CommentList from 'components/CommentList';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledGrid = withStyles({\r\n    container: {\r\n        height: '100vh'\r\n    }       \r\n})(Grid);\r\n\r\nclass App extends Component{\r\n\r\n    renderButton(){\r\n        if(this.props.auth){\r\n            return <Button onClick={()=>this.props.changeAuth(false)}>Sign Out</Button>\r\n        } else {\r\n            return <Button onClick={()=>this.props.changeAuth(true)}>Sign In</Button>\r\n        }\r\n    }   \r\n    \r\n    linkHome = props => <Link to=\"/\" {...props} />\r\n    linkNewPost = props => <Link to=\"/post\" {...props} />\r\n\r\n    renderNavBar(){\r\n        return(\r\n            <AppBar>\r\n                <Toolbar>\r\n                    <Button component={this.linkHome}>Home</Button>\r\n                    <Button component={this.linkNewPost}>Post A Comment</Button>\r\n                    {this.renderButton()}\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {this.renderNavBar()}}\r\n                <StyledGrid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={16}>\r\n                    <Route path=\"/post\"component={CommentBox}/>\r\n                    <Route exact path=\"/\" component={CommentList}/>\r\n                </StyledGrid>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {auth: state.auth}\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Route} from  'react-router-dom';\r\n\r\n\r\nimport Root from 'Root';\r\n\r\nimport App from \"components/App\";\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={App}/>\r\n        </BrowserRouter>\r\n    </Root>, \r\n    document.querySelector('#root')\r\n);","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reduxPromise from 'redux-promise';\r\nimport reducers from 'reducers';\r\n\r\nexport default ({children, initialState = {}})=>{\r\n    const store = createStore(\r\n        reducers, \r\n        initialState, \r\n        applyMiddleware(reduxPromise)\r\n    );\r\n\r\n    return (\r\n        <Provider store={store}>{children}</Provider>\r\n    );\r\n}"],"sourceRoot":""}